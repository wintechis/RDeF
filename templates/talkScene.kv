#:import TurtleLexer  pygments.lexers.rdf.TurtleLexer
#:import XmlLexer     pygments.lexers.html.XmlLexer
#:import JsonLdLexer  pygments.lexers.data.JsonLdLexer
#:import SparqlLexer  pygments.lexers.rdf.SparqlLexer

#:import Window kivy.core.window.Window
#:import Config kivy.config.Config

<TalkScene>
    rdf_displayer: _rdf_displayer
    #completed: _vdialogue_box.completed
    btn_continue: _btn_continue
    speaker_name: ''
    background: ''
    depiction:  ''
    talk: ''
    triples: []
    view_talk:_view_talk
    canvas:
        Color:
            rgba: app.bg
        Rectangle:
            pos:  0,0
            size: self.size
    BoxLayout:
        #split dialogue and detailwidget
        orientation: 'horizontal'
        BoxLayout:
            #dialogue window
            orientation: 'vertical'
            Image:
                pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                size_hint_y: None
                allow_stretch: True
                height: self.parent.height - _dialogue_box.parent.height
                source: root.background
            Splitter:
                sizable_from: 'top'
                size_hint: 1, 1/3
                max_size: root.height
                min_size: root.height * 1/3
                BoxLayout:
                    #inherits from boxlayout
                    id: _dialogue_box
                    #on_cleared: self.set_cleared
                    orientation: 'horizontal'
                    padding: self.width/80
                    spacing: self.width/100
                    canvas:
                        Color:
                            rgba: app.bg
                        Rectangle:
                            pos:  0,0
                            size: self.size
                    Image:
                        size_hint: 0.2, 1
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        source: root.depiction 
                    BoxLayout:
                        #title / text
                        orientation: 'vertical'
                        #size_hint: 1,1
                        Label:
                            id: _speaker_label
                            size_hint: 0.95, 0.15
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'
                            bold: True
                            font_size: app.font_size*Window.height/Config.getint('graphics', 'height')*1.3
                            text: root.speaker_name 
                            color: app.fg
                        Widget:
                            #separator line
                            size_hint: 0.95, 0.01
                            canvas:
                                #PushMatrix:
                                Color:
                                    rgba: app.fg
                                Rectangle:
                                    pos: self.pos
                                    size: self.size
                                #PopMatrix:
                        ScrollView:
                            size_hint: 0.95, 0.8
                            do_scroll_x: False
                            do_scroll_y: True
                            scroll_type: ['bars', 'content']
                            bar_width: 10
                            bar_pos_y: 'right'
                            bar_color: 1,1,1,1
                            scroll_y: 1
                            TalkView:
                                id: _view_talk
                                triples: root.triples
                                spacing: self.width/100
                                padding: self.spacing
                                text: root.talk
                                size_hint_y: None
                                height: self.minimum_height
                                
                        Widget:
                            size_hint: 0.95, 0.04
                            canvas:
                                #PushMatrix:
                                Color:
                                    rgba: app.fg
                                Rectangle:
                                    pos: self.x, self.center_y
                                    size: self.width, self.height/4
                                #PopMatrix:
        
        Splitter:
            sizable_from: 'left'
            size_hint: 0.7, 1
            max_size: root.width*0.8
            min_size: 50
            BoxLayout:
                padding: self.width/40
                orientation: 'vertical'
                #SPARQL-View
                canvas:
                    Color:
                        rgba: app.fg
                    Rectangle:
                        size: self.size
                        pos:  self.pos
                Splitter:
                    sizable_from: 'bottom'
                    size_hint_y: 2 #0.5
                    max_size: root.height*0.9
                    min_size: root.height*0.1
                    RdfDisplayer:
                        #triples: _view_talk.found_triples
                        id: _rdf_displayer
                   # triples: _info_label.found_triples
                    #on_triples: self.update()
                CenteredLabel:
                    color: app.bg
                    text: 'Remaining RDF data: ' + str(len( _view_talk.triples))
                RectangledButton:
                    id: _btn_continue
                    text: 'Continue'


<TalkPanelItem@TabbedPanelItem>
    canvas:
        Color:
            rgba: app.fg
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height
    background_normal: ''
    background_down: ''
    color: app.bg if self.state == 'normal' else app.fg
    background_color: app.fg if self.state == 'normal' else app.bg





##############################
## New Added #################


